---
import { markdown } from "@astropub/md";

import { ActivityData } from "~/data/schedule";

import Heading from "./Heading.astro";

interface Props {
	activity: ActivityData;
	class?: string;
}

const { class: className, activity, ...rest } = Astro.props;

const descriptionLines = await Promise.all(
	activity.description.map(async (p) => await markdown(p)),
);
---

<div class:list={["scheduled-activity", className]} {...rest}>
	<Heading level="h3" class="activity-title">{activity.title}</Heading>
	<div class="activity-locators">
		<div class="activity-time">{activity.time ?? "Time TBA"}</div>
		<div class="activity-location">{activity.location ?? "Location TBA"}</div>
	</div>
	<div class="activity-description">{descriptionLines}</div>
</div>

<style>
	.scheduled-activity {
		font-family: var(--fontFamilyBody);
		margin: 0 var(--widthBodyPadding) 3rem;
		max-width: var(--widthBodyLean);
	}

	.activity-title {
		font-size: var(--fontSizeH3);
	}

	.activity-locators {
		display: flex;
		gap: 0.75rem;
		justify-content: space-between;
		margin: 0.5rem 0;
	}

	.activity-time {
		font-size: var(--fontSizeH3);
		font-family: var(--fontFamilyHeading);
	}

	.activity-location {
		font-size: var(--fontSizeBody);
		text-align: right;
	}

	.activity-description {
		display: flex;
		gap: 0.5rem;
		flex-direction: column;
		font-size: var(--fontSizeBody);
		width: 100%;
	}

	@media (min-width: 490px) {
		.scheduled-activity {
			display: grid;
			grid-template-columns: clamp(5rem, 20vw, 10rem) auto;
			grid-template-rows: auto auto;
			gap: 0.75rem 1rem;
		}

		.activity-title {
			grid-area: 1 / 2 / 2 / 3;
		}

		.activity-locators {
			grid-area: 1 / 1 / 3 / 2;
			flex-direction: column;
			margin: 0;
			justify-content: flex-start;
			text-align: right;
		}

		.activity-description {
			grid-area: 2 / 2 / 3 / 3;
		}
	}
</style>
